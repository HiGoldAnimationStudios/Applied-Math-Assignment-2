%Error function that encodes the fixed vertex constraints
%INPUTS:
%vertex_coords: a column vector containing the (x,y) coordinates of every vertex
% same input as link_length_error_func
%leg_params: a struct containing the parameters that describe the linkage
% importantly, leg_params.crank_length is the length of the crank
% and leg_params.vertex_pos0 and leg_params.vertex_pos2 are the
% fixed positions of the crank rotation center and vertex 2.
%theta: the current angle of the crank
%OUTPUTS:
%coord_errors: a column vector of height four corresponding to the differences
% between the current values of (x1,y1),(x2,y2) and
% the fixed values that they should be
function coord_errors = fixed_coord_error_func(vertex_coords, leg_params, theta)
%your code here
    num_vertices=leg_params.num_vertices;
    num_linkages=leg_params.num_linkages;
    link_to_vertex_list=leg_params.link_to_vertex_list;
    link_lengths=leg_params.link_lengths;
    crank_length=leg_params.crank_length;
    vertex_pos0=leg_params.vertex_pos0;
    vertex_pos2=leg_params.vertex_pos2;

    vertex_coords_mat=column_to_matrix(vertex_coords);
    
    ei=zeros(4,1);
    
    x1=vertex_coords_mat(1,1);
    y1=vertex_coords_mat(1,2);
    x2=vertex_coords_mat(2,1);
    y2=vertex_coords_mat(2,2);

    %for vertex 1 fixed pos
    x1_con=cos(theta)*crank_length;
    y1_con=sin(theta)*crank_length;

    %for vertex 2 fixed pos
    ei(3)=x2-vertex_pos2(1);
    ei(4)=y2-vertex_pos2(2);

    coord_errors=ei;
end